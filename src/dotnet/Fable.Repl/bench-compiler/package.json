{
  "private": true,
  "scripts": {
    "fable": "dotnet run -c Release -p ../../Fable.Compiler start",
    "build": "dotnet run -c Release -p ../../Fable.Compiler yarn-splitter",
    "build-opt": "dotnet run -c Release -p ../../Fable.Compiler yarn-splitter --experimental optimize-fcs",
    "build-es6": "dotnet run -c Release -p ../../Fable.Compiler yarn-splitter-es6",
    "build-dotnet": "dotnet run -c Release bench-compiler.fsproj && node transform --commonjs",
    "build-dotnet-opt": "dotnet run -c Release bench-compiler.fsproj --optimize-fcs && node transform --commonjs",
    "build-library": "node ../../../../node_modules/@babel/cli/bin/babel ../../../../build/fable-library --out-dir out-test/fable-library --plugins @babel/plugin-transform-modules-commonjs --quiet",
    "rename": "cd out && for /r %x in (*.js) do ren \"%x\" *.mjs",
    "rollup": "node ../../../../node_modules/rollup/bin/rollup -i ./out/app.js -o ./out/bundle2.js --format cjs",
    "webpack": "node ../../../../node_modules/webpack-cli/bin/cli.js -p --entry ./out/app.js --output ./out/bundle.js --target node",
    "splitter": "node ../../../../node_modules/fable-splitter/dist/cli --commonjs",
    "splitter-es6": "node ../../../../node_modules/fable-splitter/dist/cli",
    "start-node": "node out/app ../Fable.Repl.fsproj && node transform",
    "start-dotnet": "dotnet run -c Release ../Fable.Repl.fsproj && node transform",
    "test-node": "node out/app ../../../../../fable-test/fable-test.fsproj && node transform --commonjs",
    "test-dotnet": "dotnet run -c Release ../../../../../fable-test/fable-test.fsproj && node transform --commonjs",
    "test-run": "node ./out-test/fable-test/src/test.js",
    "build-tests-node": "node out/app ../../../../tests/Main/Fable.Tests.fsproj && node transform --commonjs",
    "build-tests-dotnet": "dotnet run -c Release ../../../../tests/Main/Fable.Tests.fsproj && node transform --commonjs",
    "run-tests": "../../../../node_modules/.bin/mocha --colors out-test/tests/Main/Main.js",
    "profile": "node --prof out/app",
    "process": "chcp 65001 > nul && for %x in (isolate-*.log) do node --prof-process %x > %x.txt",
    "trace": "node --trace-deopt out/app > deopt.txt"
  }
}
